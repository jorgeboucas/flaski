name: nightly

on:
  schedule:
    - cron: "0 0 * * *"
    
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: | 
        echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin docker.io
        git checkout v2.x.x
        docker build . --file ./services/server/dockerfiles/Dockerfile --tag docker.io/flaski/flaski:nightly
        docker tag docker.io/flaski/flaski:nightly docker.io/mpgagebioinformatics/flaski2:nightly
        docker push docker.io/flaski/flaski:nightly
        docker push docker.io/mpgagebioinformatics/flaski2:nightly

    # security scanning is done nightly on docker.io/mpgagebioinformatics/flaski2:nightly


    # - name: Checkout repository
    #   uses: actions/checkout@v2

    # - name: Log into registry ${{ env.REGISTRY }}
    #   uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
    #   with:
    #     registry: docker.io
    #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
    #     password: ${{ secrets.DOCKER_HUB_TOKEN }}

    # # Extract metadata (tags, labels) for Docker
    # # https://github.com/docker/metadata-action
    # - name: Extract Docker metadata
    #   id: meta
    #   uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
    #   with:
    #     images: docker.io/flaski/flaski

    # # Build and push Docker image with Buildx (don't push on PR)
    # # https://github.com/docker/build-push-action
    # - name: Build and push Docker image
    #   uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
    #   with:
    #     context: .
    #     file: ./services/server/dockerfiles/Dockerfile
    #     push: true
    #     tags: docker.io/flaski/flaski:nightly

  slackNotification:
    needs: build
    name: Slack Notification
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_USERNAME: github_action_bot
        SLACK_CHANNEL: flaski
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_TITLE: "Nightly build and push completed."

  #


